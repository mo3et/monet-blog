#  Use Hugo setup : https://github.com/marketplace/actions/hugo-setup
name: Deploy
on:
  push:
    branches:
        - main # 只在main上push触发部署
    #   - add_hugo
    # paths-ignore:   # 下列文件的变更不触发部署，可以自行添加
    #   - README.md
    #   - LICENSE

jobs:
  deploy:
    runs-on: ubuntu-latest   # 使用ubuntu系统镜像运行自动化脚本

    steps:  # 自动化步骤
    - name: Checkout
      uses: actions/checkout@v3     # 第一步，下载代码仓库
      with:
          submodules: true  # Fetch Hugo themes (true OR recursive) #!!!!重点
          fetch-depth: 0    # Fetch all history for .GitInfo and .Lastmod
    - name: Hugo setup  # 第二步，安装Hugo
      uses: peaceiris/actions-hugo@v2.6.0
      with:
        hugo-version: 'latest'
        extended: true  # use a Hugo extended version.
      # with:
      #   hugo-version: '0.86.1'

    - name: Build Hugo # 编译Hugo
      run: hugo
      # run: hugo -D --minify
      # with: 
      #   publish_dir: ./public
    #   Output will be in ./public/ directory by default 
    # (-d/--destination flag to change it, or set publishdir in the config file).
    # Example:   hugo -D --minify
    - name: Caitou Deploy
      run:  |
        curl -sf https://cli.caitouyun.com/install.sh | sh
        caitou deploy --git
      env:
          CAITOU_TOKEN: ${{ secrets.CAITOU_TOKEN }}



    ##########  Other author configuation   #########
    # - name: Build  # 第三步，编译 hugo
    #   run: |
    #     cd ./website
    #     hugo -D --minify
    # - name: Deploy to Server  # 第四步，rsync推文件
    #   uses: AEnterprise/rsync-deploy@v1.0  # 使用别人包装好的步骤镜像
    #   env:
    #     DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}   # 引用配置，SSH私钥
    #     ARGS: -avz --delete --exclude='*.pyc'   # rsync参数，排除.pyc文件
    #     SERVER_PORT: '22'  # SSH端口
    #     FOLDER: ./website/public/* #推送的文件夹，路径相对于代码仓库的根目录
    #     SERVER_IP: ${{ secrets.SSH_HOST }}  # 引用配置，服务器的host名（IP或者域名domain.com）
    #     USERNAME: ${{ secrets.SSH_USERNAME }}  # 引用配置，服务器登录名
    #     SERVER_DESTINATION: /var/www/books/leetcode/   # 部署到目标文件夹

        
      # ##### Other Config
      # - run: 
      # - name: Upload a Build Artifact
      #   uses: actions/upload-artifact@v2.2.4
      #   with:
      #     name: win
      #     path: |    #需要Upload的文件夹
      #        packages/desktop/
      #        packages/desktop/build
      #        packages/desktop/dist/
      #        packages/desktop/client/main.dll
      
      # with:
      #   args: release
      # env:
      #   GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
